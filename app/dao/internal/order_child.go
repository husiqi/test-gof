// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// OrderChildDao is the manager for logic model data accessing and custom defined data operations functions management.
type OrderChildDao struct {
	Table   string          // Table is the underlying table name of the DAO.
	Group   string          // Group is the database configuration group name of current DAO.
	Columns OrderChildColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// OrderChildColumns defines and stores column names for table order_child.
type OrderChildColumns struct {
	Id               string // 编号                                                     
    Sn               string // 本站父订单号                                             
    OrderSn          string // 本站订单号                                               
    Money            string // 商家本单支付金额                                         
    PayStatus        string // 付款状态【1:已付款,2:申请退款 3:退款中 4:已退款】        
    CreatedTime      string // 下单时间                                                 
    PayTime          string // 付款时间                                                 
    Delivertime      string // 发货时间                                                 
    Freight          string // 物流费                                                   
    ConfirmTime      string // 确认收货时间                                             
    RealSource       string // 真实商品来源                                             
    Source           string // 商品来源【1.云仓2.京东6.阿里7.天猫8.苏宁】               
    ThirdSn          string // 合作方订单号                                             
    LogisticsStatus  string // 物流状态【1:未发货 2:已发货 3:已收货】                   
    Status           string // 订单状态【1:下单失败 2:下单成功 3:订单完成 4:订单关闭】  
    IsDone           string // 是否完成【1:是 2:否】                                    
    IsClose          string // 是否关闭【1:是 2:否】                                    
    ThirdOrderState  string // 合作方订单状态：0：为取消订单，1:为有效 ,2:为下单失败    
    ThirdOrderPay    string // 合作方订单支付状态，1成功，2失败                         
    GoodsStatus      string // 0未发货 1已发货 2已收货 3 已完成                         
    SuccessMoney     string // 平台本单支付金额                                         
    ShopId           string // 商家id                                                   
    ThirdSn2         string // 合作方订单号(扩充)                                       
    IsRefund         string // 是否退单【1:是 0:否】                                    
    IsApply          string // 申请售后【1:是 2:否】
}

//  orderChildColumns holds the columns for table order_child.
var orderChildColumns = OrderChildColumns{
	Id:              "id",                 
            Sn:              "sn",                 
            OrderSn:         "order_sn",           
            Money:           "money",              
            PayStatus:       "pay_status",         
            CreatedTime:     "created_time",       
            PayTime:         "pay_time",           
            Delivertime:     "delivertime",        
            Freight:         "freight",            
            ConfirmTime:     "confirm_time",       
            RealSource:      "real_source",        
            Source:          "source",             
            ThirdSn:         "third_sn",           
            LogisticsStatus: "logistics_status",   
            Status:          "status",             
            IsDone:          "is_done",            
            IsClose:         "is_close",           
            ThirdOrderState: "third_order_state",  
            ThirdOrderPay:   "third_order_pay",    
            GoodsStatus:     "goods_status",       
            SuccessMoney:    "success_money",      
            ShopId:          "shop_id",            
            ThirdSn2:        "third_sn2",          
            IsRefund:        "is_refund",          
            IsApply:         "is_apply",
}

// NewOrderChildDao creates and returns a new DAO object for table data access.
func NewOrderChildDao() *OrderChildDao {
	return &OrderChildDao{
		Group:   "default",
		Table:   "order_child",
		Columns: orderChildColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OrderChildDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OrderChildDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OrderChildDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}